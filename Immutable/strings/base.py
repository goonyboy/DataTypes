#1 Кавычки можно использовать любые, это не повлияет на вывод содержимого переменных
s1 = 'hello'
s2 = "hello"
s3 = '''hello'''
print(s1) #OK
print(s2) #OK
print(s3) #OK

#2 Выводим символы, подстроки переменной s
s = 'Hello, world!'
print(s[0])     #Первый символ
print(s[4])     #Пятый символ
print(s[0:4])   #С 1-го по 5-й символ !!НЕ!! включительно

# Выражение, находящееся внутри квадратных скобок, называется срезом.
# Срез — это подмножество элементов итерируемого объекта, которое задаётся следующим образом:
# mystr[START:STOP:STEP] — берёт срез от номера START до STOP, не включая его, с шагом STEP. 
# По умолчанию START=0, STOP=длина объекта, STEP=1.

print(s[::])        #Идём от первого до последнего элемента с шагом 1
print(s[2::])       #Хотим начать со второго индекса
print(s[::2])       #Хотим пойти с шагом через 1
print(s[-1])        #Хотим пойти с последнего индекса
print(s[0:-2:1])    #Хотим вывести все элементы, кроме двух последних
print(s[0:-2])      #Хотим вывести все элементы, кроме двух последних (упрощаем)
print(s[:-2])       #Хотим вывести все элементы, кроме двух последних (сокращенный вариант)
print(s[::-1])      #Хотим вывести элементы не с шагом 1, а в обратном порядке с шагом -1

#3 Полезные функции
print(len(s))           #Позволяет узнать длину строки s

print(s.find(','))      #Выводит индекс символа "," в переменной s
print(s.find('ello'))   #В данном случае выведет индекс первого символа
print(s.find('l'))      #Символ "l" встречается несколько раз. Выведет индекс первого совпадения

print(s.isdigit())      #Состоит ли строка из цифр?
print(s1.isalpha())     #Состоит ли строка из букв?
print(s.isalnum())      #Состоит ли строка из цифр и букв?

print(s.upper())        #Приводим все буквы строки s к верхнему регистру
print(s.lower())        #Приводим все буквы строки s к нижнему регистру
print(s)                #Выводим строку s

#4 Форматирование строк
#%d, %i	    Целое число
#%5d, %12d	Выделяет пространство 5 (или любое другое число) символов под это число. Выравнивание вправо, остальное пространство остаётся пустым
#%05d	    Также выделяется пространство в 5 символов, но свободное пространство слева заполняется нулями
#%o	        Число в восьмеричной системе счисления
#%x	        Число в шестнадцатеричной системе счисления
#%f	        Число с плавающей точкой
#%10.2f	    Число с плавающей точкой, для которого зарезервировано пространство из 10 символов и стоит ограничение на количество знаков после запятой — 2
#%e	        Также число с плавающей точкой, но в экспоненциальной записи
#%c	        Код символа
#%s	        Другая строка

age = 25
my_age = "I'm %d years old" % (age)
print(my_age)

pi = 31.4159265
print("%.4e" % (pi))

day = 26
month = 2
year = 2023

print("%d.%02d.%d" % (day, month, year))
print("%d-%02d-%d" % (year, month, day))
print("%d/%d/%d" % (year, day, month))

